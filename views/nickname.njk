{% extends "layouts/main.html" %}

{% block body %}
<div role="banner" class="banner">
	<!-- flowy background -->
</div>
<main>
	<header class="title">
		<!-- current page title or system prompt/feedback -->
		<div class="brand-mark">
			<!-- for use on landing and room join -->
		</div>
		<div class="game-title no-outline">
			<!-- in the case of the pink box, this would be class="outline" -->
			<h1>Nickname</h1>
			<span class="subtitle">What name would you like to use?</span>
			<!-- during a round the h1 would be a prompt, so content might be "TFOML" -->
			<!-- otherwise it may be "round 3 scores", "player 4 wins", "final scores" -->
		</div>
	</header>
	<section class="primary">
		<!-- description of main header, or forms/primary interactions -->
		<div class="nickname-form">
			<form action="" name="nickname-form" id="nickname-form">
				<div class="input-wrap">
					<label for="nickname" hidden>Nickname</label>
					<input type="text" name="nickname" id="nickname">
				</div>
			</form>
		</div>
	</section>
	<section class="cta">
		<!-- if the primary section is a description, calls to action go here -->
		<div class="submit-nickname">
			<button data-socket-emit="submit nickname">Join Room</button>
		</div>
		{# A form used for directing oneself between all the views of the program. Used for debugging. DELETE BEFORE FINAL (MARCH) COMMIT! #}
		{% include "partials/debug-nav.njk" %}
	</section>
</main>
{% endblock %}

{% block postScript %}
<script>
	document.addEventListener('DOMContentLoaded', function () {
		thunkidm.socket.on('invalid input', function (errData) {
			console.log(errData)
			// create a span above the input with invalid data
			// fill the span with the err message
		});
		thunkidm.socket.on('advance to: nickname picker', () => {
			window.location.href = 'nickname';
		})
	});
// if form element is input id=room-code, validation should be 6 char string
</script>
{% endblock %}